.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GOGUI-SERVER" 1 "" "" ""
.SH NAME
gogui-server \- Connects a Go program supporting Go Text Protocol to a socket.
.SH "SYNOPSIS"
.ad l
.hy 0
.HP 13
\fBgogui\-server\fR \fB\-port\fR\ \fIn\fR [\fB\-config\fR\ \fIfile\fR] [\fB\-loop\fR] [\fB\-remote\fR\ \fIhostname\fR] [\fB\-timeout\fR\ \fIsec\fR] [\fB\-user\fR\ \fIfile\fR] [\fB\-verbose\fR] \fIprogram\fR
.ad
.hy
.ad l
.hy 0
.HP 13
\fBgogui\-server\fR \fB\-help\fR
.ad
.hy
.ad l
.hy 0
.HP 13
\fBgogui\-server\fR \fB\-version\fR
.ad
.hy

.SH "DESCRIPTION"



.PP
Runs a Go program supporting the Go Text Protocol by executing \fIprogram\fR, and connects its input and output to a listen socket on port number \fIport\fR of the local computer, so that other programs can connect to it from the network\&. If the option \fB\-remote\fR is used, an connection to another host is made, instead of waiting for incoming connections\&.


.SH "OPTIONS"



.TP
\fB\-config\fR \fIfile\fR
Read command line options and arguments from the given file\&.

.TP
\fB\-help\fR
Display help and exit\&.

.TP
\fB\-loop\fR
After connection is finished, restart the program and wait for next connection\&.

.TP
\fB\-port\fR \fIn\fR
Port number to use for the socket\&.

.TP
\fB\-remote\fR \fIhostname\fR
Connect to a remote host, instead of waiting for incoming connections\&. See also \fB\-user\fR\&.

.TP
\fB\-timeout\fR \fIseconds\fR
Close connections if no command has been received for a number of seconds\&. Default is zero, which means no timeout\&.

.TP
\fB\-user\fR \fIfile\fR
If the option \fB\-remote\fR is used, and the remote program requires that any connecting program sends some plain text login information before waiting for commands, then this option can be used\&. The argument is a filename; the content of this file is sent verbatim to the remote computer\&.

.TP
\fB\-verbose\fR
Print debugging messages\&.

.TP
\fB\-version\fR
Print version and exit\&.



.PP




