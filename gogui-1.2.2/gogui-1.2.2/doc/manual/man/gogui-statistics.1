.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GOGUI-STATISTICS" 1 "" "" ""
.SH NAME
gogui-statistics \- Runs GTP commands on all positions of game collections.
.SH "SYNOPSIS"
.ad l
.hy 0
.HP 17
\fBgogui\-statistics\fR [\fB\-backward\fR] [\fB\-begin\fR\ \fIcommands\fR] [\fB\-config\fR\ \fIfile\fR] [\fB\-commands\fR\ \fIcommands\fR] [\fB\-final\fR\ \fIcommands\fR] [\fB\-force\fR] [\fB\-min\fR\ \fIn\fR] [\fB\-max\fR\ \fIn\fR] [\fB\-program\fR\ \fIprogram\fR] [\fB\-quiet\fR] [\fB\-random\fR] [\fB\-setup\fR\ \fIn\fR] [\fB\-size\fR\ \fIn\fR] [\fB\-verbose\fR] \fIfile\&.sgf\fR...
.ad
.hy
.ad l
.hy 0
.HP 17
\fBgogui\-statistics\fR \fB\-help\fR
.ad
.hy
.ad l
.hy 0
.HP 17
\fBgogui\-statistics\fR \fB\-version\fR
.ad
.hy
.ad l
.hy 0
.HP 17
\fBgogui\-statistics\fR \fB\-analyze\fR\ \fIfile\fR [\fB\-config\fR\ \fIfile\fR] [\fB\-output\fR\ \fIfile\fR] [\fB\-precision\fR\ \fIn\fR]
.ad
.hy

.SH "DESCRIPTION"



.PP
gogui\-statistics runs a a set of commands for a Go program supporting the Go Text Protocol on each position of Go game collections\&. The results are stored in the text file "gtpstatistics\&.dat" in table format\&. If gogui\-statistics is run with the option \fB\-analyze\fR, a HTML file is produced from the file statistics\&.dat\&. The HTML file contains summary statistics for this file\&.


.PP
All GTP commands that return a single number can be used with gogui\-statistics\&. For the following standard and commonly used commands, an automatic conversion of the result to a number is done: 

.TP
\fBcputime\fR
The result is the difference to the last invocation of cputime\&.

.TP
\fBestimate_score\fR
The result is parsed for a score string as the first word (like GNU Go's response) The score string is converted into a score number, Black counting positive, White negative\&.

.TP
\fBfinal_score\fR
The result is parsed for a score string\&. The score string is converted into a score number, Black counting positive, White negative\&.

.TP
\fBreg_genmove\fR
The color of the move in the game is appended\&. The result is "1", if the result is the same move as played in the game, "0" otherwise\&.
 


.SH "OPTIONS"



.TP
\fB\-analyze\fR \fIfile\fR
Analyze the result table \fI\fIfile\&.dat\fR\fR\&. Creates a HTML report files\&. The files will be placed in the same directory as \fI\fIfile\&.dat\fR\fR and use \fI\fIfile\fR\fR as a filename prefix\&.

.TP
\fB\-backward\fR
Iterate backward over positions, starting with end position as number one\&.

.TP
\fB\-config\fR \fIfile\fR
Read command line options and arguments from the given file\&.

.TP
\fB\-commands\fR \fIcommands\fR
Comma separated list of GTP commands to run on each position (before each move)\&.

.TP
\fB\-final\fR \fIcommands\fR
Comma separated list of GTP commands to run only on final positions (after the last move)\&.

.TP
\fB\-force\fR
Overwrite existing result table\&.

.TP
\fB\-help\fR
Display help and exit\&.

.TP
\fB\-max\fR
Only run commands on positions at less or equal this move number\&.

.TP
\fB\-min\fR
Only run commands on positions at greater or equal this move number\&.

.TP
\fB\-output\fR \fIfile\fR
Filename for result table\&. Default is \fIstatistics\&.dat\fR\&. If option \fB\-analyze\fR is used, the output is a directory or directory and file name prefix for the generated report files\&.

.TP
\fB\-precision\fR \fIn\fR
Maximum number of fraction digits for floating point numbers in the output file\&.

.TP
\fB\-program\fR \fIcommand\fR
Command line for running Go program\&.

.TP
\fB\-quiet\fR
Don't write information about progress to standard error stream\&.

.TP
\fB\-random\fR
Only select one random position per game\&.

.TP
\fB\-setup\fR
Allow setup stones in the root position\&.

.TP
\fB\-size\fR \fIn\fR
Board size allowed for games (default 19)\&.

.TP
\fB\-verbose\fR
Print the GTP stream to the Go program to standard error\&.

.TP
\fB\-version\fR
Print version and exit\&.


.SH "EXAMPLES"




.SS "Run gogui-statistics"



.PP
 

.nf

\fB
gogui\-statistics \-program "gnugo \-\-mode gtp" \\
  \-commands "reg_genmove,estimate_score,cputime" \\
  \-final "final_score" \\
  regression/games/olympiad2004/19x19/*\&.sgf
\fR

.fi
 




.SS "Generate HTML Reports"



.PP
 

.nf

\fB
gogui\-statistics \-analyze statistics\&.dat \-output statistics/olympiad2004
\fR

.fi
 



.PP






