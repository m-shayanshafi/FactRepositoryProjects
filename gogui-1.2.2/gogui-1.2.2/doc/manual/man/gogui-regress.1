.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GOGUI-REGRESS" 1 "" "" ""
.SH NAME
gogui-regress \- Runs GTP regression tests.
.SH "SYNOPSIS"
.ad l
.hy 0
.HP 14
\fBgogui\-regress\fR [\fB\-config\fR\ \fIfile\fR] [\fB\-gtpfile\fR\ \fIfile\fR] [\fB\-long\fR] [\fB\-output\fR\ \fIdirectory\fR] [\fB\-verbose\fR] \fIprogram\fR \fItest\&.tst\fR...
.ad
.hy
.ad l
.hy 0
.HP 14
\fBgogui\-regress\fR \fB\-help\fR
.ad
.hy
.ad l
.hy 0
.HP 14
\fBgogui\-regress\fR \fB\-version\fR
.ad
.hy

.SH "DESCRIPTION"



.PP
Runs a list of regression tests for a Go program supporting the Go Text Protocol, and formats the output as HTML\&. The regression tests are GTP files, which use the special comment \fB#?\fR, as used for the GNU Go: \fIhttp://www.gnu.org/software/gnugo/gnugo.html\fR regression tests (see section Regression testing: \fIhttp://www.gnu.org/software/gnugo/gnugo_20.html#SEC205\fR of the GNU Go documentation)\&. The regular expression syntax for the expected responses is mostly compatible to the one used by the GNU Go regression test suite, see the documentation for java\&.util\&.regex\&.Pattern: \fIhttp://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/Pattern.html\fR for a complete description\&.


.PP
Test names that start with a '@' are interpreted as files containing a test suite\&. The file with the corresponding name (excluding the '@') is read and every non\-empty line that does not start with the comment character '#' is added to the list of test names\&. The files are allowed to contain names of other test suites\&.


.PP
The main output file is \fIindex\&.html\fR\&. For each test file \fI\fItest\fR\&.tst\fR, additional files with name \fI\fItest\fR\&.html\fR and \fI\fItest\fR\&.out\&.html\fR are generated\&. Additionally, a text file \fIsummary\&.dat\fR is generated, with a table row containing the most important summary statistics\&. gogui\-regress will start a new instance of the Go program for each test and use the directory of the test file as the working directory for the Go program\&.


.PP
The return value of gogui\-regress is 0, if all tests completed successfully with no unexpected fails, 1 if there was at least one unexpected fail, and 2 if the Go program crashed or some other error occurred\&.


.SH "OPTIONS"



.TP
\fB\-config\fR \fIfile\fR
Read command line options and arguments from the given file\&.

.TP
\fB\-gtpfile\fR \fIfile\fR
File with GTP commands to execute before each test\&. This file can be used to configure engine parameters\&. If a command from the file fails, the program will exit with an error message\&.

.TP
\fB\-help\fR
Display help and exit\&.

.TP
\fB\-long\fR
Print longer output to standard output, one line per test\&.

.TP
\fB\-output\fR \fIdirectory\fR
Write output files to the given directory\&.

.TP
\fB\-verbose\fR
Print the GTP stream to the Go program to standard error\&.

.TP
\fB\-version\fR
Print version and exit\&.



.PP




