/*
 * FirstLaunch.java
 *
 * Created on May 12, 2007, 5:24 PM
 */

package shoddybattleclient;
import java.io.*;
import javax.swing.*;
import shoddybattle.ModData;

/**
 *
 * @author  Colin
 */
public class FirstLaunch extends JDialog {
    
    /**
     * Get the Application Data directory on Windows.
     * e.g. C:\Documents and Settings\Colin\Application Data
     */
    public static native String getApplicationDataDirectory();
    
    /** Creates new form FirstLaunch */
    public FirstLaunch(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        String dir = new JFileChooser().getCurrentDirectory().toString();
        String folder = ((File.separatorChar == '/') ? "." : "") + "shoddybattle";
        if (!dir.endsWith(File.separator)) {
            folder = File.separator + folder;
        }
        txtPath.setText(dir + folder);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPath = new javax.swing.JTextField();
        cmdBrowse = new javax.swing.JButton();
        cmdOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Welcome to Shoddy Battle! This program needs a directory");

        jLabel2.setText("to store some of its data files. Please confirm the suggestion");

        jLabel3.setText("or change it to a different path.");

        txtPath.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPathKeyTyped(evt);
            }
        });

        cmdBrowse.setText("...");
        cmdBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBrowseActionPerformed(evt);
            }
        });

        cmdOK.setText("OK");
        cmdOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOKActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2)
                    .add(jLabel1)
                    .add(jLabel3)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtPath, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cmdBrowse))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, cmdOK, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel3)
                .add(14, 14, 14)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cmdBrowse)
                    .add(txtPath, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 17, Short.MAX_VALUE)
                .add(cmdOK)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBrowseActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) {
            return;
        }
        txtPath.setText(chooser.getSelectedFile().toString());
    }//GEN-LAST:event_cmdBrowseActionPerformed

    private void txtPathKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPathKeyTyped
        if (evt.getKeyChar() == '\n') {
            cmdOKActionPerformed(null);
        }
    }//GEN-LAST:event_txtPathKeyTyped

    /**
     * Return whether a path is writable.
     */
    private static boolean isWritable(String path) {
        File f;
        try {
            f = new File(path);
            f.mkdirs();
            f = new File(path, "placeholder");
            f.createNewFile();
        } catch (Exception e) {
            return false;
        }
        
        f.delete();
        return true;
    }
    
    /**
     * Initialise Shoddy Battle's private storage.
     */
    public static void initialiseLocalStorage() {
        String path = null;
        try {
            if (System.getProperty("os.name").toUpperCase().indexOf("WINDOWS") != -1) {
                System.loadLibrary("ShoddyHelper");
                path = getApplicationDataDirectory() + "\\Shoddy Battle\\Shoddy Battle\\1.0";
            } else {
                path = new JFileChooser().getCurrentDirectory().toString();
                if (!path.endsWith(File.separator)) {
                    path += File.separatorChar;
                }
                path += ".shoddybattle";
            }
        } catch (Exception e) {
            
        }
        
        if ((path == null) || !isWritable(path)) {
            new FirstLaunch(null, true).setVisible(true);
            return;
        }
        
        ModData.setStorageLocation(path);
    }
    
    private void cmdOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOKActionPerformed
        String path = txtPath.getText();
        
        if (!isWritable(path)) {
            JOptionPane.showMessageDialog(this,
                    "Shoddy Battle cannot write to the given path. " +
                    "Please choose a different path.",
                    "Error",
                    JOptionPane.OK_OPTION);
            return;
        }
        
        setVisible(false);
        dispose();
        
        ModData.setStorageLocation(path);
    }//GEN-LAST:event_cmdOKActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (JOptionPane.showConfirmDialog(this,
                "Closing this window will exit Shoddy Battle. " +
                "Are you sure you want to do this?",
                "Closing",
                JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION) {
            return;
        }
        
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FirstLaunch(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdBrowse;
    private javax.swing.JButton cmdOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtPath;
    // End of variables declaration//GEN-END:variables
    
}
