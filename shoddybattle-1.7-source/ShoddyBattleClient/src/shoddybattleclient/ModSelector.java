/*
 * ModSelector.java
 *
 * Created on May 19, 2007, 10:55 PM
 */

package shoddybattleclient;
import shoddybattle.ModData;
import java.io.File;
import java.util.Collections;
import java.util.Vector;

/**
 *
 * @author  Colin
 */
public class ModSelector extends javax.swing.JDialog {
    
    private String m_selection;
    private boolean m_selected = false;
    private Vector m_list = new Vector();
    
    private static class ListEntry implements Comparable {
        public String m_name, m_uuid;
        public ListEntry(String name, String uuid) {
            m_name = name;
            m_uuid = uuid;
        }
        public int compareTo(Object o) {
            ListEntry e2 = (ListEntry)o;
            if (m_uuid == null) {
                return -1;
            }
            if (e2.m_uuid == null) {
                return 1;
            }
            return m_name.compareTo(e2.m_name);
        }
        public String toString() {
            return m_name;
        }
    }
    
    /**
     * Was a selection made?
     */
    public boolean hasSelection() {
        return m_selected;
    }
    
    /**
     * Return the selected UUID.
     */
    public String getSelection() {
        return m_selection;
    }
    
    /** Creates new form ModSelector */
    public ModSelector(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        File f = new File(ModData.getStorageLocation());
        File[] files = f.listFiles();
        for (int i = 0; i < files.length; ++i) {
            String uuid = files[i].getName();
            String name = ModData.getServerName(uuid);
            if (name != null) {
                m_list.add(new ListEntry(name, uuid));
            }
        }
        m_list.add(new ListEntry("Standard Metagame", null));
        Collections.sort(m_list);
        lstServers.setListData(m_list);
        lstServers.setSelectedIndex(0);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstServers = new javax.swing.JList();
        cmdOK = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jLabel1.setText("Select the name of the server which this team is for.");

        jLabel2.setText("In order for a server to appear here, you must have");

        jLabel3.setText("logged on to it on this computer.");

        lstServers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstServersMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(lstServers);

        cmdOK.setText("OK");
        cmdOK.setOpaque(false);
        cmdOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOKActionPerformed(evt);
            }
        });

        cmdCancel.setText("Cancel");
        cmdCancel.setOpaque(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jLabel3)
                                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 196, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(cmdCancel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                .add(cmdOK, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel2)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel3)
                .add(16, 16, 16)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(cmdOK)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cmdCancel))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lstServersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstServersMouseClicked
        if (evt.getClickCount() >= 2) {
            cmdOKActionPerformed(null);
        }
    }//GEN-LAST:event_lstServersMouseClicked

    private void cmdOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOKActionPerformed
        ListEntry entry = (ListEntry)lstServers.getSelectedValue();
        m_selection = entry.m_uuid;
        m_selected = true;
        dispose();
    }//GEN-LAST:event_cmdOKActionPerformed

    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        dispose();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModSelector(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstServers;
    // End of variables declaration//GEN-END:variables
    
}
