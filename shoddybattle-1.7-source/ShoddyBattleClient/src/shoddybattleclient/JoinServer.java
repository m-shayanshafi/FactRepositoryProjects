/*
 * JoinServer.java
 *
 * Created on December 20, 2006, 11:27 PM
 */

package shoddybattleclient;
import netbattle.*;
import java.io.*;
import netbattle.messages.SuccessMessage;
import netbattle.messages.WelcomeMessage;
import shoddybattle.ModData;
import javax.swing.*;
import javax.imageio.*;
import java.awt.image.*;
import java.awt.*;

/**
 *
 * @author  Colin
 */
public class JoinServer extends JFrame {
    
    /** Connection to the server. */
    private HumanClient m_server;
    private CaptchaPanel m_captcha = new CaptchaPanel();
    
    private static class CaptchaPanel extends JPanel {
        private BufferedImage m_image;
        public void setImage(BufferedImage image) {
            m_image = image;
        }
        public void paintComponent(Graphics g) {
            if (m_image != null) {
                g.drawImage(m_image, 0, 0, 200, 100, this);
            }
        }
    }
    
    private void toggleCaptcha(boolean show) {
        captcha.setVisible(show);
        lblCaptcha.setVisible(show);
        txtCaptcha.setVisible(show);
        txtCaptcha.setText(null);
        setSize(getWidth(), show ? 520 : 424);
    }
    
    /** Creates new form JoinServer */
    public JoinServer(HumanClient server, int version) {
        initComponents();
        captcha.setSize(200, 100);
        captcha.add(m_captcha);
        m_captcha.setVisible(true);
        m_captcha.setLocation(0, 0);
        m_captcha.setSize(200, 100);
        cmdPasswordInfo.setVisible(false); // Stupid button.
        m_server = server;
        // The server had better send a welcome message first.
        try {
            WelcomeMessage msg = (WelcomeMessage)server.getNextMessage();
            String name = msg.getServerName();
            String unique = msg.getUniqueName();
            ModData.addServer(unique, name);
            server.setServerName(unique);
            txtName.setText(name);
            txtWelcome.setText(msg.getText());
            
            if (version > 2) {
                handleCaptcha((SuccessMessage)server.getNextMessage());
            } else {
                toggleCaptcha(false);
            }
        } catch (Throwable e) {
            // Might as well give up.
            dispose();
        }
    }
    
    private void handleCaptcha(SuccessMessage msg) {
        if (msg.getSuccess())
            return;
        boolean b = msg.isCaptchaRequired();
        toggleCaptcha(b);
        if (!b) {
            return;
        }
        try {
            BufferedImage image = m_server.readImage();
            MediaTracker tracker = new MediaTracker(this);
            tracker.addImage(image, 0);
            try {
                tracker.waitForAll();
            } catch (InterruptedException e) {

            }
            m_captcha.setImage(image);
            m_captcha.repaint();
        } catch (Exception e) {
            dispose();
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtWelcome = new javax.swing.JTextArea();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        cmdLogIn = new javax.swing.JButton();
        cmdPasswordInfo = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        captcha = new javax.swing.JPanel();
        lblCaptcha = new javax.swing.JLabel();
        txtCaptcha = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cmdRegister = new javax.swing.JButton();
        txtRegisterUser = new javax.swing.JTextField();
        txtRegisterPassword = new javax.swing.JPasswordField();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtName.setFont(new java.awt.Font("Dialog", 1, 24));
        txtName.setText("Server Name");

        txtWelcome.setColumns(20);
        txtWelcome.setEditable(false);
        txtWelcome.setLineWrap(true);
        txtWelcome.setRows(5);
        txtWelcome.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtWelcome);

        jPanel1.setOpaque(false);

        jLabel4.setText("User name:");

        jLabel5.setText("Password:");

        txtUserName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserNameKeyTyped(evt);
            }
        });

        cmdLogIn.setText("Log In");
        cmdLogIn.setOpaque(false);
        cmdLogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLogInActionPerformed(evt);
            }
        });

        cmdPasswordInfo.setText("?");
        cmdPasswordInfo.setOpaque(false);
        cmdPasswordInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPasswordInfoActionPerformed(evt);
            }
        });

        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPasswordKeyTyped(evt);
            }
        });

        org.jdesktop.layout.GroupLayout captchaLayout = new org.jdesktop.layout.GroupLayout(captcha);
        captcha.setLayout(captchaLayout);
        captchaLayout.setHorizontalGroup(
            captchaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 278, Short.MAX_VALUE)
        );
        captchaLayout.setVerticalGroup(
            captchaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 69, Short.MAX_VALUE)
        );

        lblCaptcha.setText("CAPTCHA:");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel5)
                                    .add(jLabel4))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(txtPassword)
                                    .add(txtUserName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(cmdPasswordInfo))
                            .add(cmdLogIn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(captcha, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(124, 124, 124))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(lblCaptcha)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(txtCaptcha, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 152, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(txtUserName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(cmdPasswordInfo)
                    .add(txtPassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(captcha, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblCaptcha)
                    .add(txtCaptcha, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 14, Short.MAX_VALUE)
                .add(cmdLogIn)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Log In", jPanel1);

        jPanel2.setOpaque(false);

        jLabel3.setText("User name:");

        jLabel6.setText("Password:");

        cmdRegister.setText("Register");
        cmdRegister.setOpaque(false);
        cmdRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRegisterActionPerformed(evt);
            }
        });

        txtRegisterUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRegisterUserKeyTyped(evt);
            }
        });

        txtRegisterPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRegisterPasswordKeyTyped(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(cmdRegister)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel3)
                            .add(jLabel6))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(txtRegisterPassword)
                            .add(txtRegisterUser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))))
                .addContainerGap(170, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(txtRegisterUser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(txtRegisterPassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 113, Short.MAX_VALUE)
                .add(cmdRegister)
                .add(25, 25, 25))
        );

        jTabbedPane1.addTab("Register", jPanel2);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, txtName))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(txtName)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 168, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRegisterPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRegisterPasswordKeyTyped
        if (evt.getKeyChar() == '\n') {
            cmdRegisterActionPerformed(null);
        }
    }//GEN-LAST:event_txtRegisterPasswordKeyTyped

    private void txtRegisterUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRegisterUserKeyTyped
        if (evt.getKeyChar() == '\n') {
            cmdRegisterActionPerformed(null);
        }
    }//GEN-LAST:event_txtRegisterUserKeyTyped

    private void txtPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyTyped
        if (evt.getKeyChar() == '\n') {
            cmdLogInActionPerformed(null);
        }
    }//GEN-LAST:event_txtPasswordKeyTyped

    private void txtUserNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserNameKeyTyped
        if (evt.getKeyChar() == '\n') {
            cmdLogInActionPerformed(null);
        }
    }//GEN-LAST:event_txtUserNameKeyTyped

    private void cmdRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRegisterActionPerformed
        final String user = txtRegisterUser.getText().trim();
        
        final char[] pass = txtRegisterPassword.getPassword();
        final String password = String.valueOf(pass).trim();
        
        for (int i = 0; i < pass.length; ++i) {
            // security measure - prevent pass from staying in memory
            pass[i] = 0;
        }
        
        if (user.length() == 0) {
            String error = "Please enter a user name to register.";
            new MessageBox(this, "Registration error", error).setVisible(true);
            return;
        }
        m_server.registerAccount(user, password);
        
        try {
            SuccessMessage msg = (SuccessMessage)m_server.getNextMessage();
            handleCaptcha(msg);
            if (!msg.getSuccess()) {
                String message = msg.getMessageText();
                if (message == null) {
                    String error = "The user name you requested is unavailable, or you have used a + or * in your user name.";
                    new MessageBox(this, "Registration error", error).setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, message);
                }
                return;
            }
        } catch (Throwable e) {
            e.printStackTrace();
            return;
        }
        
        new MessageBox(this,
                "Registered",
                "You have been registered successfully!")
                    .setVisible(true);
        
        txtRegisterUser.setText(null);
        txtRegisterPassword.setText(null);
    }//GEN-LAST:event_cmdRegisterActionPerformed

    private void cmdPasswordInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPasswordInfoActionPerformed
        final String text = "Your password is always hashed with SHA-1, a "
                + "standard message digest algorithm, before being sent to "
                + "the server. This means that the server operators will not "
                + "be able to see the plain-text representation of your "
                + "password.";
        new MessageBox(this, "Password Information", text).setVisible(true);
    }//GEN-LAST:event_cmdPasswordInfoActionPerformed

    private void cmdLogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLogInActionPerformed
        final String user = txtUserName.getText().trim();
        final char[] pass = txtPassword.getPassword();
        final String password = String.valueOf(pass).trim();
        
        for (int i = 0; i < pass.length; ++i) {
            // security measure - prevent pass from staying in memory
            pass[i] = 0;
        }
        if (user.length() == 0) {
            String error = "Please enter a user name.";
            new MessageBox(this, "Log in error", error).setVisible(true);
            return;
        }
        m_server.joinServer(user, password, txtCaptcha.getText());
        
        try {
            SuccessMessage msg = (SuccessMessage)m_server.getNextMessage();
            handleCaptcha(msg);
            if (!msg.getSuccess()) {
                String message = msg.getMessageText();
                if (message == null) {
                    String error = "You are already logged on to this server or "
                        + "you have entered an invalid user name or password.";
                    new MessageBox(this, "Log in error", error).setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, message);
                }
                return;
            }
        } catch (Throwable e) {
            e.printStackTrace();
            return;
        }
        
        // We've joined successfully!
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LobbyWindow(m_server, user).setVisible(true);
                dispose();
            }
        });
    }//GEN-LAST:event_cmdLogInActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel captcha;
    private javax.swing.JButton cmdLogIn;
    private javax.swing.JButton cmdPasswordInfo;
    private javax.swing.JButton cmdRegister;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblCaptcha;
    private javax.swing.JTextField txtCaptcha;
    private javax.swing.JLabel txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtRegisterPassword;
    private javax.swing.JTextField txtRegisterUser;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JTextArea txtWelcome;
    // End of variables declaration//GEN-END:variables
    
}
