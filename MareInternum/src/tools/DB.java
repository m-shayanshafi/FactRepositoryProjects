/*	 
*    This file is part of Mare Internum.
*
*	 Copyright (C) 2008,2009  Johannes Hoechstaedter
*
*    Mare Internum is free software: you can redistribute it and/or modify
*    it under the terms of the GNU General Public License as published by
*    the Free Software Foundation, either version 3 of the License, or
*    (at your option) any later version.
*
*    Mare Internum is distributed in the hope that it will be useful,
*    but WITHOUT ANY WARRANTY; without even the implied warranty of
*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*    GNU General Public License for more details.
*
*    You should have received a copy of the GNU General Public License
*    along with Mare Internum.  If not, see <http://www.gnu.org/licenses/>.
*
*/

package tools;

import java.util.Vector;

import entities.Einheit;
import entities.PPGrenze;
import entities.Provinz;
import entities.RPGrenze;
import entities.RRGrenze;
import entities.Region;

/**
 * This class stores all persistent data like the x and y values of the icons, names of regions etc...
 * @author johannes
 *
 */
public class DB {

	public DB(){
		
	}
	
	/**
	 * Returns a Vector with all objects of type Region.
	 * @return
	 */
	public Vector<Region> getRegionen(){
		Vector<Region> v=new Vector<Region>();
		Region aktO;
		aktO=new Region();
		aktO.oid=0;
		aktO.name="Oceanus Atlanticus";
		aktO.topologie="wasser";
		aktO.kosten=2;
		v.addElement(aktO);
		aktO=new Region();
		aktO.oid=1;
		aktO.name="Mare Internum";
		aktO.topologie="wasser";
		aktO.kosten=3;
		v.addElement(aktO);
		aktO=new Region();
		aktO.oid=2;
		aktO.name="Pontus Euxinus";
		aktO.topologie="wasser";
		aktO.kosten=2;
		v.addElement(aktO);
		aktO=new Region();
		aktO.oid=3;
		aktO.name="Sarmatia";
		aktO.topologie="land";
		aktO.kosten=2;
		v.addElement(aktO);
		aktO=new Region();
		aktO.oid=4;
		aktO.name="Arabia";
		aktO.topologie="land";
		aktO.kosten=2;
		v.addElement(aktO);
		return v;
	}
	
	/**
	 * Returns a Vector with all object of type Provinz
	 * @return
	 */
	public Vector<Provinz> getProvinzen(){
		Vector<Provinz> v=new Vector<Provinz>();

		Provinz aktO;
		aktO=new Provinz();
		aktO.oid=0;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Gallia Lugdunensis";
		aktO.x_wMarker=377;
		aktO.y_wMarker=494;
		aktO.x_pMarker=440;
		aktO.y_pMarker=488;
		aktO.isStadt=true;
		aktO.x_Stadt=410;
		aktO.y_Stadt=465;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=1;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Belgica";
		aktO.x_wMarker=539;
		aktO.y_wMarker=480;
		aktO.x_pMarker=500;
		aktO.y_pMarker=453;
		aktO.isStadt=false;
		aktO.x_Stadt=532;
		aktO.y_Stadt=421;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=2;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Germania Superior";
		aktO.x_wMarker=620;
		aktO.y_wMarker=497;
		aktO.x_pMarker=620;
		aktO.y_pMarker=447;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=3;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Pannonia";
		aktO.x_wMarker=713;
		aktO.y_wMarker=529;
		aktO.x_pMarker=726;
		aktO.y_pMarker=481;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=4;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Dacia";
		aktO.x_wMarker=807;
		aktO.y_wMarker=582;
		aktO.x_pMarker=826;
		aktO.y_pMarker=508;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=5;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Dacia Exterior";
		aktO.x_wMarker=933;
		aktO.y_wMarker=550;
		aktO.x_pMarker=926;
		aktO.y_pMarker=502;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=6;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Scythia";
		aktO.x_wMarker=1132;
		aktO.y_wMarker=520;
		aktO.x_pMarker=1191;
		aktO.y_pMarker=539;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=7;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Armenia";
		aktO.x_wMarker=1350;
		aktO.y_wMarker=619;
		aktO.x_pMarker=1305;
		aktO.y_pMarker=570;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=8;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Aquitania";
		aktO.x_wMarker=362;
		aktO.y_wMarker=607;
		aktO.x_pMarker=379;
		aktO.y_pMarker=554;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=9;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Gallia Narbonensis";
		aktO.x_wMarker=449;
		aktO.y_wMarker=622;
		aktO.x_pMarker=459;
		aktO.y_pMarker=575;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=10;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Gallia Cisalpina";
		aktO.x_wMarker=598;
		aktO.y_wMarker=589;
		aktO.x_pMarker=549;
		aktO.y_pMarker=591;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=11;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Dalmatia";
		aktO.x_wMarker=718;
		aktO.y_wMarker=644;
		aktO.x_pMarker=696;
		aktO.y_pMarker=596;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=12;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Macedonia";
		aktO.x_wMarker=840;
		aktO.y_wMarker=737;
		aktO.x_pMarker=801;
		aktO.y_pMarker=697;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=13;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Thracia";
		aktO.x_wMarker=918;
		aktO.y_wMarker=698;
		aktO.x_pMarker=892;
		aktO.y_pMarker=639;
		aktO.isStadt=true;
		aktO.x_Stadt=985;
		aktO.y_Stadt=733;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=14;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Asia";
		aktO.x_wMarker=1007;
		aktO.y_wMarker=778;
		aktO.x_pMarker=992;
		aktO.y_pMarker=817;
		aktO.isStadt=true;
		aktO.x_Stadt=985;
		aktO.y_Stadt=733;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=15;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Bithynia";
		aktO.x_wMarker=1113;
		aktO.y_wMarker=744;
		aktO.x_pMarker=1074;
		aktO.y_pMarker=736;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=16;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Cappadocia";
		aktO.x_wMarker=1230;
		aktO.y_wMarker=748;
		aktO.x_pMarker=1195;
		aktO.y_pMarker=789;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=17;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Assyria";
		aktO.x_wMarker=1360;
		aktO.y_wMarker=729;
		aktO.x_pMarker=1313;
		aktO.y_pMarker=696;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=18;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Lusitania";
		aktO.x_wMarker=191;
		aktO.y_wMarker=628;
		aktO.x_pMarker=172;
		aktO.y_pMarker=678;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=19;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Baetica";
		aktO.x_wMarker=189;
		aktO.y_wMarker=764;
		aktO.x_pMarker=226;
		aktO.y_pMarker=754;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=20;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Hispania Tarraconensis";
		aktO.x_wMarker=332;
		aktO.y_wMarker=672;
		aktO.x_pMarker=277;
		aktO.y_pMarker=677;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=21;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Campania";
		aktO.x_wMarker=595;
		aktO.y_wMarker=695;
		aktO.x_pMarker=629;
		aktO.y_pMarker=694;
		aktO.isStadt=true;
		aktO.x_Stadt=595;
		aktO.y_Stadt=695;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=22;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Lucania";
		aktO.x_wMarker=647;
		aktO.y_wMarker=852;
		aktO.x_pMarker=677;
		aktO.y_pMarker=741;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=23;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Achaia";
		aktO.x_wMarker=838;
		aktO.y_wMarker=858;
		aktO.x_pMarker=820;
		aktO.y_pMarker=798;
		aktO.isStadt=true;
		aktO.x_Stadt=868;
		aktO.y_Stadt=835;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=24;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Lycia";
		aktO.x_wMarker=1106;
		aktO.y_wMarker=831;
		aktO.x_pMarker=1064;
		aktO.y_pMarker=810;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=25;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Syria";
		aktO.x_wMarker=1225;
		aktO.y_wMarker=921;
		aktO.x_pMarker=1211;
		aktO.y_pMarker=875;
		aktO.isStadt=true;
		aktO.x_Stadt=1184;
		aktO.y_Stadt=923;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=26;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Messopotamia";
		aktO.x_wMarker=1357;
		aktO.y_wMarker=813;
		aktO.x_pMarker=1303;
		aktO.y_pMarker=820;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=27;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Mauretania";
		aktO.x_wMarker=247;
		aktO.y_wMarker=894;
		aktO.x_pMarker=315;
		aktO.y_pMarker=886;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=28;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Numidia";
		aktO.x_wMarker=481;
		aktO.y_wMarker=997;
		aktO.x_pMarker=437;
		aktO.y_pMarker=919;
		aktO.isStadt=true;
		aktO.x_Stadt=540;
		aktO.y_Stadt=887;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=29;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Africa Proconsularis";
		aktO.x_wMarker=600;
		aktO.y_wMarker=1054;
		aktO.x_pMarker=642;
		aktO.y_pMarker=1070;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=30;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Cyrenaica";
		aktO.x_wMarker=858;
		aktO.y_wMarker=1068;
		aktO.x_pMarker=807;
		aktO.y_pMarker=1105;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=31;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Aegyptus";
		aktO.x_wMarker=1049;
		aktO.y_wMarker=1087;
		aktO.x_pMarker=972;
		aktO.y_pMarker=1094;
		aktO.isStadt=true;
		aktO.x_Stadt=1051;
		aktO.y_Stadt=1031;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=32;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Judea";
		aktO.x_wMarker=1202;
		aktO.y_wMarker=989;
		aktO.x_pMarker=1185;
		aktO.y_pMarker=1034;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=33;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Germania Inferior";
		aktO.x_wMarker=611;
		aktO.y_wMarker=372;
		aktO.x_pMarker=651;
		aktO.y_pMarker=377;
		aktO.isStadt=false;
		aktO.x_Stadt=0;
		aktO.y_Stadt=0;
		v.addElement(aktO);
		aktO=new Provinz();
		aktO.oid=34;
		aktO.spielernummer=9999;
		aktO.z_lager=0;
		aktO.ware=9999;
		aktO.isAusgewaehlt=false;
		aktO.name="Britannia";
		aktO.x_wMarker=402;
		aktO.y_wMarker=317;
		aktO.x_pMarker=393;
		aktO.y_pMarker=358;
		aktO.isStadt=true;
		aktO.x_Stadt=415;
		aktO.y_Stadt=386;
		v.addElement(aktO);

		
		return v;
	}
	
	/**
	 * Returns a Vector with all borders between regions
	 * @return
	 */
	public Vector<RRGrenze> getRRGrenzen(){
		Vector<RRGrenze> v=new Vector<RRGrenze>();
		
		RRGrenze aktO;
		aktO=new RRGrenze();
		aktO.oid=0;
		aktO.regionID1=0;
		aktO.regionID2=1;
		v.addElement(aktO);
		aktO=new RRGrenze();
		aktO.oid=1;
		aktO.regionID1=0;
		aktO.regionID2=3;
		v.addElement(aktO);
		aktO=new RRGrenze();
		aktO.oid=2;
		aktO.regionID1=1;
		aktO.regionID2=2;
		v.addElement(aktO);
		aktO=new RRGrenze();
		aktO.oid=3;
		aktO.regionID1=3;
		aktO.regionID2=4;
		v.addElement(aktO);

		return v;
	}
	
	/**
	 * Returns a vector with all borders between regions and provinces
	 * @return
	 */
	public Vector<RPGrenze> getRPGrenzen(){
		Vector<RPGrenze> v=new Vector<RPGrenze>();
		RPGrenze aktO;
		aktO=new RPGrenze();
		aktO.oid=0;
		aktO.regionID=0;
		aktO.provinzID=19;
		aktO.richtung="O";
		aktO.x=151;
		aktO.y=782;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=1;
		aktO.regionID=0;
		aktO.provinzID=18;
		aktO.richtung="O";
		aktO.x=129;
		aktO.y=654;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=2;
		aktO.regionID=0;
		aktO.provinzID=20;
		aktO.richtung="S";
		aktO.x=280;
		aktO.y=607;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=3;
		aktO.regionID=0;
		aktO.provinzID=8;
		aktO.richtung="O";
		aktO.x=334;
		aktO.y=570;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=4;
		aktO.regionID=0;
		aktO.provinzID=0;
		aktO.richtung="O";
		aktO.x=320;
		aktO.y=488;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=5;
		aktO.regionID=0;
		aktO.provinzID=1;
		aktO.richtung="S";
		aktO.x=507;
		aktO.y=362;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=6;
		aktO.regionID=0;
		aktO.provinzID=33;
		aktO.richtung="O";
		aktO.x=581;
		aktO.y=324;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=7;
		aktO.regionID=0;
		aktO.provinzID=34;
		aktO.richtung="O";
		aktO.x=323;
		aktO.y=351;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=8;
		aktO.regionID=1;
		aktO.provinzID=19;
		aktO.richtung="N";
		aktO.x=235;
		aktO.y=804;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=9;
		aktO.regionID=1;
		aktO.provinzID=20;
		aktO.richtung="NW";
		aktO.x=338;
		aktO.y=714;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=10;
		aktO.regionID=1;
		aktO.provinzID=9;
		aktO.richtung="N";
		aktO.x=449;
		aktO.y=646;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=11;
		aktO.regionID=1;
		aktO.provinzID=10;
		aktO.richtung="N";
		aktO.x=528;
		aktO.y=638;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=12;
		aktO.regionID=1;
		aktO.provinzID=21;
		aktO.richtung="O";
		aktO.x=569;
		aktO.y=661;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=13;
		aktO.regionID=1;
		aktO.provinzID=22;
		aktO.richtung="O";
		aktO.x=662;
		aktO.y=772;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=14;
		aktO.regionID=1;
		aktO.provinzID=11;
		aktO.richtung="O";
		aktO.x=676;
		aktO.y=650;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=15;
		aktO.regionID=1;
		aktO.provinzID=12;
		aktO.richtung="O";
		aktO.x=766;
		aktO.y=731;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=16;
		aktO.regionID=1;
		aktO.provinzID=23;
		aktO.richtung="O";
		aktO.x=795;
		aktO.y=822;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=17;
		aktO.regionID=1;
		aktO.provinzID=13;
		aktO.richtung="N";
		aktO.x=909;
		aktO.y=753;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=18;
		aktO.regionID=1;
		aktO.provinzID=14;
		aktO.richtung="NO";
		aktO.x=926;
		aktO.y=816;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=19;
		aktO.regionID=1;
		aktO.provinzID=24;
		aktO.richtung="N";
		aktO.x=1084;
		aktO.y=871;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=20;
		aktO.regionID=1;
		aktO.provinzID=16;
		aktO.richtung="NO";
		aktO.x=1152;
		aktO.y=859;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=21;
		aktO.regionID=1;
		aktO.provinzID=25;
		aktO.richtung="O";
		aktO.x=1174;
		aktO.y=902;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=22;
		aktO.regionID=1;
		aktO.provinzID=32;
		aktO.richtung="O";
		aktO.x=1157;
		aktO.y=990;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=23;
		aktO.regionID=1;
		aktO.provinzID=31;
		aktO.richtung="S";
		aktO.x=1015;
		aktO.y=1046;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=24;
		aktO.regionID=1;
		aktO.provinzID=30;
		aktO.richtung="S";
		aktO.x=839;
		aktO.y=1009;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=25;
		aktO.regionID=1;
		aktO.provinzID=29;
		aktO.richtung="S";
		aktO.x=645;
		aktO.y=1008;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=26;
		aktO.regionID=1;
		aktO.provinzID=28;
		aktO.richtung="W";
		aktO.x=551;
		aktO.y=907;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=27;
		aktO.regionID=1;
		aktO.provinzID=27;
		aktO.richtung="S";
		aktO.x=311;
		aktO.y=838;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=28;
		aktO.regionID=2;
		aktO.provinzID=5;
		aktO.richtung="NW";
		aktO.x=1000;
		aktO.y=582;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=29;
		aktO.regionID=2;
		aktO.provinzID=6;
		aktO.richtung="N";
		aktO.x=1172;
		aktO.y=601;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=30;
		aktO.regionID=2;
		aktO.provinzID=7;
		aktO.richtung="NO";
		aktO.x=1241;
		aktO.y=639;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=31;
		aktO.regionID=2;
		aktO.provinzID=17;
		aktO.richtung="O";
		aktO.x=1263;
		aktO.y=671;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=32;
		aktO.regionID=2;
		aktO.provinzID=16;
		aktO.richtung="S";
		aktO.x=1198;
		aktO.y=709;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=33;
		aktO.regionID=2;
		aktO.provinzID=15;
		aktO.richtung="S";
		aktO.x=1089;
		aktO.y=699;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=34;
		aktO.regionID=2;
		aktO.provinzID=14;
		aktO.richtung="S";
		aktO.x=1014;
		aktO.y=737;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=35;
		aktO.regionID=2;
		aktO.provinzID=13;
		aktO.richtung="W";
		aktO.x=950;
		aktO.y=686;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=36;
		aktO.regionID=3;
		aktO.provinzID=33;
		aktO.richtung="W";
		aktO.x=684;
		aktO.y=389;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=37;
		aktO.regionID=3;
		aktO.provinzID=2;
		aktO.richtung="S";
		aktO.x=694;
		aktO.y=429;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=38;
		aktO.regionID=3;
		aktO.provinzID=3;
		aktO.richtung="S";
		aktO.x=748;
		aktO.y=437;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=39;
		aktO.regionID=3;
		aktO.provinzID=4;
		aktO.richtung="S";
		aktO.x=839;
		aktO.y=443;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=40;
		aktO.regionID=3;
		aktO.provinzID=5;
		aktO.richtung="S";
		aktO.x=959;
		aktO.y=458;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=41;
		aktO.regionID=3;
		aktO.provinzID=6;
		aktO.richtung="S";
		aktO.x=1170;
		aktO.y=480;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=42;
		aktO.regionID=3;
		aktO.provinzID=7;
		aktO.richtung="S";
		aktO.x=1308;
		aktO.y=510;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=43;
		aktO.regionID=4;
		aktO.provinzID=32;
		aktO.richtung="W";
		aktO.x=1233;
		aktO.y=1046;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=44;
		aktO.regionID=4;
		aktO.provinzID=25;
		aktO.richtung="W";
		aktO.x=1243;
		aktO.y=917;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=45;
		aktO.regionID=4;
		aktO.provinzID=26;
		aktO.richtung="N";
		aktO.x=1351;
		aktO.y=874;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=46;
		aktO.regionID=4;
		aktO.provinzID=17;
		aktO.richtung="W";
		aktO.x=1393;
		aktO.y=732;
		v.addElement(aktO);
		aktO=new RPGrenze();
		aktO.oid=47;
		aktO.regionID=4;
		aktO.provinzID=7;
		aktO.richtung="NW";
		aktO.x=1410;
		aktO.y=659;
		v.addElement(aktO);
		return v;

	}
	
	/**
	 * Returns a vector with all borders between provinces
	 * @return
	 */
	public Vector<PPGrenze> getPPGrenzen(){
		Vector<PPGrenze> v=new Vector<PPGrenze>();
		PPGrenze aktO;
		aktO=new PPGrenze();
		aktO.oid=0;
		aktO.provinzID1=0;
		aktO.provinzID2=8;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=1;
		aktO.provinzID1=0;
		aktO.provinzID2=9;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=2;
		aktO.provinzID1=0;
		aktO.provinzID2=1;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=3;
		aktO.provinzID1=1;
		aktO.provinzID2=9;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=4;
		aktO.provinzID1=1;
		aktO.provinzID2=10;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=5;
		aktO.provinzID1=1;
		aktO.provinzID2=2;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=6;
		aktO.provinzID1=1;
		aktO.provinzID2=33;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=7;
		aktO.provinzID1=2;
		aktO.provinzID2=33;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=8;
		aktO.provinzID1=2;
		aktO.provinzID2=10;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=9;
		aktO.provinzID1=2;
		aktO.provinzID2=3;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=10;
		aktO.provinzID1=3;
		aktO.provinzID2=10;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=11;
		aktO.provinzID1=3;
		aktO.provinzID2=11;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=12;
		aktO.provinzID1=3;
		aktO.provinzID2=4;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=13;
		aktO.provinzID1=4;
		aktO.provinzID2=11;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=14;
		aktO.provinzID1=4;
		aktO.provinzID2=12;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=15;
		aktO.provinzID1=4;
		aktO.provinzID2=13;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=16;
		aktO.provinzID1=4;
		aktO.provinzID2=5;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=17;
		aktO.provinzID1=5;
		aktO.provinzID2=13;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=18;
		aktO.provinzID1=5;
		aktO.provinzID2=6;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=19;
		aktO.provinzID1=6;
		aktO.provinzID2=7;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=20;
		aktO.provinzID1=7;
		aktO.provinzID2=17;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=21;
		aktO.provinzID1=8;
		aktO.provinzID2=20;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=22;
		aktO.provinzID1=8;
		aktO.provinzID2=9;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=23;
		aktO.provinzID1=9;
		aktO.provinzID2=20;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=24;
		aktO.provinzID1=9;
		aktO.provinzID2=10;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=25;
		aktO.provinzID1=10;
		aktO.provinzID2=21;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=26;
		aktO.provinzID1=10;
		aktO.provinzID2=11;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=27;
		aktO.provinzID1=11;
		aktO.provinzID2=12;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=28;
		aktO.provinzID1=12;
		aktO.provinzID2=23;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=29;
		aktO.provinzID1=12;
		aktO.provinzID2=13;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=30;
		aktO.provinzID1=13;
		aktO.provinzID2=14;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=31;
		aktO.provinzID1=14;
		aktO.provinzID2=15;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=32;
		aktO.provinzID1=14;
		aktO.provinzID2=24;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=33;
		aktO.provinzID1=15;
		aktO.provinzID2=24;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=34;
		aktO.provinzID1=15;
		aktO.provinzID2=16;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=35;
		aktO.provinzID1=16;
		aktO.provinzID2=17;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=36;
		aktO.provinzID1=16;
		aktO.provinzID2=26;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=37;
		aktO.provinzID1=16;
		aktO.provinzID2=24;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=38;
		aktO.provinzID1=16;
		aktO.provinzID2=25;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=39;
		aktO.provinzID1=17;
		aktO.provinzID2=26;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=40;
		aktO.provinzID1=18;
		aktO.provinzID2=19;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=41;
		aktO.provinzID1=18;
		aktO.provinzID2=20;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=42;
		aktO.provinzID1=19;
		aktO.provinzID2=20;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=43;
		aktO.provinzID1=21;
		aktO.provinzID2=22;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=44;
		aktO.provinzID1=25;
		aktO.provinzID2=26;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=45;
		aktO.provinzID1=25;
		aktO.provinzID2=32;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=46;
		aktO.provinzID1=27;
		aktO.provinzID2=28;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=47;
		aktO.provinzID1=28;
		aktO.provinzID2=29;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=48;
		aktO.provinzID1=29;
		aktO.provinzID2=30;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=49;
		aktO.provinzID1=30;
		aktO.provinzID2=31;
		v.addElement(aktO);
		aktO=new PPGrenze();
		aktO.oid=50;
		aktO.provinzID1=31;
		aktO.provinzID2=32;
		v.addElement(aktO);
		return v;

	}
	
	/**
	 * returns all objects for troop icons
	 * @return
	 */
	public Vector<Einheit> getEinheiten(){
		Vector<Einheit> v=new Vector<Einheit>();
		Einheit aktO;
		aktO=new Einheit();
		aktO.oid=0;
		aktO.x=134;
		aktO.y=478;
		aktO.spielernummer=0;
		aktO.z_einheiten=0;
		aktO.regionID=0;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=1;
		aktO.x=221;
		aktO.y=395;
		aktO.spielernummer=1;
		aktO.z_einheiten=0;
		aktO.regionID=0;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=2;
		aktO.x=65;
		aktO.y=531;
		aktO.spielernummer=2;
		aktO.z_einheiten=0;
		aktO.regionID=0;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=3;
		aktO.x=89;
		aktO.y=404;
		aktO.spielernummer=3;
		aktO.z_einheiten=0;
		aktO.regionID=0;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=4;
		aktO.x=226;
		aktO.y=496;
		aktO.spielernummer=4;
		aktO.z_einheiten=0;
		aktO.regionID=0;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=5;
		aktO.x=740;
		aktO.y=898;
		aktO.spielernummer=0;
		aktO.z_einheiten=0;
		aktO.regionID=1;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=6;
		aktO.x=828;
		aktO.y=942;
		aktO.spielernummer=1;
		aktO.z_einheiten=0;
		aktO.regionID=1;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=7;
		aktO.x=677;
		aktO.y=950;
		aktO.spielernummer=2;
		aktO.z_einheiten=0;
		aktO.regionID=1;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=8;
		aktO.x=966;
		aktO.y=968;
		aktO.spielernummer=3;
		aktO.z_einheiten=0;
		aktO.regionID=1;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=9;
		aktO.x=592;
		aktO.y=779;
		aktO.spielernummer=4;
		aktO.z_einheiten=0;
		aktO.regionID=1;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=10;
		aktO.x=1085;
		aktO.y=658;
		aktO.spielernummer=0;
		aktO.z_einheiten=0;
		aktO.regionID=2;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=11;
		aktO.x=1008;
		aktO.y=689;
		aktO.spielernummer=1;
		aktO.z_einheiten=0;
		aktO.regionID=2;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=12;
		aktO.x=1196;
		aktO.y=663;
		aktO.spielernummer=2;
		aktO.z_einheiten=0;
		aktO.regionID=2;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=13;
		aktO.x=1146;
		aktO.y=637;
		aktO.spielernummer=3;
		aktO.z_einheiten=0;
		aktO.regionID=2;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=14;
		aktO.x=1027;
		aktO.y=631;
		aktO.spielernummer=4;
		aktO.z_einheiten=0;
		aktO.regionID=2;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=15;
		aktO.x=1024;
		aktO.y=397;
		aktO.spielernummer=0;
		aktO.z_einheiten=0;
		aktO.regionID=3;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=16;
		aktO.x=912;
		aktO.y=391;
		aktO.spielernummer=1;
		aktO.z_einheiten=0;
		aktO.regionID=3;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=17;
		aktO.x=1101;
		aktO.y=405;
		aktO.spielernummer=2;
		aktO.z_einheiten=0;
		aktO.regionID=3;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=18;
		aktO.x=1169;
		aktO.y=415;
		aktO.spielernummer=3;
		aktO.z_einheiten=0;
		aktO.regionID=3;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=19;
		aktO.x=831;
		aktO.y=383;
		aktO.spielernummer=4;
		aktO.z_einheiten=0;
		aktO.regionID=3;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=20;
		aktO.x=1325;
		aktO.y=957;
		aktO.spielernummer=0;
		aktO.z_einheiten=0;
		aktO.regionID=4;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=21;
		aktO.x=1323;
		aktO.y=1027;
		aktO.spielernummer=1;
		aktO.z_einheiten=0;
		aktO.regionID=4;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=22;
		aktO.x=1439;
		aktO.y=904;
		aktO.spielernummer=2;
		aktO.z_einheiten=0;
		aktO.regionID=4;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=23;
		aktO.x=1476;
		aktO.y=821;
		aktO.spielernummer=3;
		aktO.z_einheiten=0;
		aktO.regionID=4;
		v.addElement(aktO);
		aktO=new Einheit();
		aktO.oid=24;
		aktO.x=1403;
		aktO.y=973;
		aktO.spielernummer=4;
		aktO.z_einheiten=0;
		aktO.regionID=4;
		v.addElement(aktO);
		return v;

	}
	
	/**
	 * returns all troop items in a specific region
	 * @param id id of region
	 * @return
	 */
	public Vector<Einheit> getEinheitenByRegion(int id){
		Vector<Einheit> v_einheiten=this.getEinheiten();
		Vector<Einheit> v=new Vector<Einheit>();
		Einheit aktEinheit;
		for(int i=0;i<v_einheiten.size();i++){
			aktEinheit=(Einheit)v_einheiten.elementAt(i);
			if(aktEinheit.getRegionID()==id){
				v.addElement(aktEinheit);
			}
		}
		return v;
	}
	
}
